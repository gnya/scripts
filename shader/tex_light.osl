/*
 * toon shader (0.4.0)
 * author: gnya
 */

#include "node_math.h"

shader tex_light(
    vector Location = vector(0.0, 0.0, 0.0),
    point Rotation = point(0.0, 0.0, 0.0),
    float Energy = 1.0,
    float Size = M_PI / 4.0,

    output vector Light = vector(0.0, 0.0, 0.0),
    output vector UV = vector(0.0, 0.0, 0.0)
) {
    matrix mat = euler_to_mat(Rotation);
    vector x_axis = vector(mat[0][0], mat[0][1], mat[0][2]);
    vector y_axis = vector(mat[1][0], mat[1][1], mat[1][2]);
    vector z_axis = vector(mat[2][0], mat[2][1], mat[2][2]);

    vector direction = normalize(Location - P);
    float W = dot(direction, z_axis);
    float tan_theta = W * tan(Size / 2.0);
    vector projection = (W * z_axis - direction) / tan_theta;
    float U = dot(projection, x_axis) / 2.0 + 0.5;
    float V = dot(projection, y_axis) / 2.0 + 0.5;

    if (U >= 0.0 & U <= 1.0 & V >= 0.0 & V <= 1.0 & W >= 0.0) {
        float strength = Energy / M_PI;

        Light = direction * strength;
    }

    UV = vector(U, V, W);
}
